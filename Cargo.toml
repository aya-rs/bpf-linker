[package]
name = "bpf-linker"
version = "0.9.15"
authors = ["Alessandro Decina <alessandro.d@gmail.com>"]
description = "BPF static linker"
license = "MIT OR Apache-2.0"
keywords = ["BPF", "eBPF", "linker", "llvm"]
categories = [
    "development-tools",
    "command-line-utilities",
    "no-std",
    "os::linux-apis",
]
repository = "https://github.com/aya-rs/bpf-linker"
readme = "README.md"
edition = "2021"

[dependencies]
# cli deps
anyhow = { workspace = true }
clap = { workspace = true }
tracing-appender = "0.2"
tracing-subscriber = { version = "0.3", features = ["env-filter", "registry"] }
tracing-tree = "0.4"

# lib deps
ar = { version = "0.9.0" }
aya-rustc-llvm-proxy = { version = "0.9.5", optional = true }
gimli = { version = "0.32.0" }
libc = { version = "0.2.174" }
llvm-sys-19 = { package = "llvm-sys", features = ["disable-alltargets-init"], version = "191.0.0", optional = true }
llvm-sys-20 = { package = "llvm-sys", features = ["disable-alltargets-init"], version = "201.0.1", optional = true }
llvm-sys-21 = { package = "llvm-sys", features = ["disable-alltargets-init"], version = "211.0.0-rc1", optional = true }
log = { version = "0.4.27" }
thiserror = { version = "2.0.12" }
tracing = "0.1"

[dev-dependencies]
compiletest_rs = { version = "0.11.0" }
regex = { version = "1.11.1", default-features = false }
rustc-build-sysroot = { workspace = true }
which = { version = "8.0.0", default-features = false, features = ["real-sys", "regex"] }

[lints]
workspace = true

[[bin]]
name = "bpf-linker"

[features]
llvm-19 = ["dep:llvm-sys-19"]
llvm-20 = ["dep:llvm-sys-20"]
llvm-21 = ["dep:llvm-sys-21"]
rust-llvm-19 = [
    "dep:aya-rustc-llvm-proxy",
    "llvm-19",
    "llvm-sys-19/no-llvm-linking",
]
rust-llvm-20 = [
    "dep:aya-rustc-llvm-proxy",
    "llvm-20",
    "llvm-sys-20/no-llvm-linking",
]
rust-llvm-21 = [
    "dep:aya-rustc-llvm-proxy",
    "llvm-21",
    "llvm-sys-21/no-llvm-linking",
]
default = [
    "llvm-21",
    "rust-llvm-21",
    "rustc-build-sysroot",
]
rustc-build-sysroot = []

[workspace]
members = ["xtask"]

[workspace.dependencies]
# cli deps
anyhow = { version = "1.0.100", default-features = false }
clap = { version = "4.5.49", features = ["derive"] }
# dev deps
rustc-build-sysroot = { version = "0.5.11", default-features = false }
walkdir = { version = "2.5.0", default-features = false }

[workspace.lints.clippy]
all = "warn"
as_ptr_cast_mut = "warn"
as_underscore = "warn"
cast_lossless = "warn"
#cast_possible_truncation = "warn"
#cast_possible_wrap = "warn"
cast_precision_loss = "warn"
cast_sign_loss = "warn"
char_lit_as_u8 = "warn"
fn_to_numeric_cast = "warn"
fn_to_numeric_cast_with_truncation = "warn"
mut_mut = "warn"
needless_bitwise_bool = "warn"
needless_lifetimes = "warn"
no_mangle_with_rust_abi = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
ref_as_ptr = "warn"
unnecessary_cast = "warn"
unused_trait_names = "warn"
use_self = "warn"

[workspace.lints.rust]
absolute_paths_not_starting_with_crate = "warn"
deprecated_in_future = "warn"
elided_lifetimes_in_paths = "warn"
explicit_outlives_requirements = "warn"
ffi_unwind_calls = "warn"
keyword_idents = "warn"
let_underscore_drop = "warn"
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_abi = "warn"
missing_copy_implementations = "warn"
non_ascii_idents = "warn"
noop_method_call = "warn"
single_use_lifetimes = "warn"
trivial_numeric_casts = "warn"
unreachable_pub = "warn"
unsafe_op_in_unsafe_fn = "warn"
unstable_features = "warn"
unused_crate_dependencies = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"
unused_results = "warn"

[profile.release]
debug = true

[patch.crates-io]
compiletest_rs = { git = "https://github.com/Manishearth/compiletest-rs.git" }
