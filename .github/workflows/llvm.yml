name: LLVM

on:
  workflow_call:
    outputs:
      cache-key-llvm-aarch64-apple-darwin:
        value: ${{ jobs.llvm-macos.outputs.cache-key-llvm-aarch64-apple-darwin }}
      cache-key-llvm-aarch64-unknown-linux-musl:
        value: ${{ jobs.llvm-linux.outputs.cache-key-llvm-aarch64-unknown-linux-musl }}
      cache-key-llvm-x86_64-apple-darwin:
        value: ${{ jobs.llvm-macos.outputs.cache-key-llvm-x86_64-apple-darwin }}
      cache-key-llvm-x86_64-unknown-linux-musl:
        value: ${{ jobs.llvm-linux.outputs.cache-key-llvm-x86_64-unknown-linux-musl }}

jobs:
  llvm-linux:
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-musl
            container: gitlab.com/vadorovsky/gentoo-musl-llvm:stage4-amd64-toolchains-cross-arm64
            clang: aarch64-gentoo-linux-musl-clang
            clangxx: aarch64-gentoo-linux-musl-clang++
            system-processor: aarch64
            sysroot: /usr/aarch64-gentoo-linux-musl
          - target: x86_64-unknown-linux-musl
            container: gitlab.com/vadorovsky/gentoo-musl-llvm:stage4-amd64-toolchains
            clang: clang
            clangxx: clang++
            system-processor: x86_64
            sysroot: /
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.target.container }}
    name: LLVM Linux
    outputs:
      cache-key-llvm-aarch64-unknown-linux-musl: ${{ steps.cache-key-llvm.outputs.cache-key-llvm-aarch64-unknown-linux-musl }}
      cache-key-llvm-x86_64-unknown-linux-musl: ${{ steps.cache-key-llvm.outputs.cache-key-llvm-x86_64-unknown-linux-musl }}
    steps:
      - uses: actions/checkout@v4

      - name: Check LLVM repository
        id: ls-remote
        run: |
          set -euxo pipefail
          value=$(git ls-remote https://github.com/aya-rs/llvm-project.git refs/heads/rustc/18.0-2024-02-13 | cut -f1)
          echo "sha=$value" >> "$GITHUB_OUTPUT"

      - name: Construct LLVM cache ID
        id: cache-key-llvm
        run: echo "cache-key-llvm-${{ matrix.target }}=llvm-${{ matrix.target }}-${{ steps.ls-remote.outputs.sha }}-1" >> "$GITHUB_OUTPUT"

      - name: Cache
        id: cache-llvm
        uses: actions/cache@v4
        with:
          path: ${{ env.GITHUB_WORKSPACE }}/llvm-install
          key: ${{ steps.cache-key-llvm.outputs[format('cache-key-llvm-{0}', matrix.target)] }}
          lookup-only: true

      - name: Add LLVM to PATH
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          set -euxo pipefail
          echo "/usr/lib/llvm/17/bin" >> $GITHUB_PATH

      - name: Build LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        uses: ./.github/actions/build-llvm
        with:
          git-ref: ${{ steps.ls-remote.outputs.sha }}
          cxxflags: "-stdlib=libc++"
          ldflags: "-fuse-ld=lld -rtlib=compiler-rt -unwindlib=libunwind"
          clang: ${{ matrix.clang }}
          clangxx: ${{ matrix.clangxx }}
          find-root-path-mode-program: NEVER
          system-name: Linux
          system-processor: ${{ matrix.system-processor }}
          sysroot: ${{ matrix.sysroot }}
          build-static: ON
          enable-libcxx: ON
          host-triple: ${{ matrix.target }}
          linker: lld
          install-dir: ${{ env.GITHUB_WORKSPACE }}/llvm-install

  llvm-macos:
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            system-processor: aarch64
          - target: x86_64-apple-darwin
            system-processor: x86_64
    runs-on: macos-latest
    name: LLVM macOS
    outputs:
      cache-key-llvm-aarch64-apple-darwin: ${{ steps.cache-key-llvm.outputs.cache-key-llvm-aarch64-apple-darwin }}
      cache-key-llvm-x86_64-apple-darwin: ${{ steps.cache-key-llvm.outputs.cache-key-llvm-x86_64-apple-darwin }}
    steps:
      - uses: actions/checkout@v4

      - name: Check LLVM repository
        id: ls-remote
        run: |
          set -euxo pipefail
          value=$(git ls-remote https://github.com/aya-rs/llvm-project.git refs/heads/rustc/18.0-2024-02-13 | cut -f1)
          echo "sha=$value" >> "$GITHUB_OUTPUT"

      - name: Construct LLVM cache ID
        id: cache-key-llvm
        run: echo "cache-key-llvm-${{ matrix.target }}=llvm-${{ matrix.target }}-${{ steps.ls-remote.outputs.sha }}-1" >> "$GITHUB_OUTPUT"

      - name: Cache
        id: cache-llvm
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/llvm-install
          key: ${{ steps.cache-key-llvm.outputs[format('cache-key-llvm-{0}', matrix.target)] }}
          lookup-only: true

      - name: Install Tools (macOS)
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          set -euxo pipefail
          brew install cmake ninja

      - name: Build LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        uses: ./.github/actions/build-llvm
        with:
          git-ref: ${{ steps.ls-remote.outputs.sha }}
          clang: clang
          clangxx: clang++
          system-name: Darwin
          system-processor: ${{ matrix.system-processor }}
          build-static: OFF
          enable-libcxx: OFF
          host-triple: ${{ matrix.target }}
          install-dir: ${{ github.workspace }}/llvm-install
